{
    "contents" : "##### Packages we need ##### \n# library(foreign)\n# library(rtiff) # voor de plotjes\n# library(lavaan)\n# library(psych)\n# library(Hmisc)\n\n\nlibrary(foreign);library(gdata);library(RGtk2);library(ppcor);\nlibrary(nlme);library(rtiff);library(psych);library(lavaan);library(MASS)\nlibrary(shiny)\ncampbell <- read.spss(\"C:/Users/admin/Dropbox/APIM/campbell.sav\", to.data.frame = T)\n\n##### main function #####\n#' Main Function\n#' \n#' Description of main function\n#' \n#' @param xname TODO: Describe arguments\n#' @return Object of class apim.\n#' @examples\n#' res <- apim_sem(dname = \"gender\", xname = \"neurotocism\", yname=\"distress\", \n#'  namex1 = \"mneuro\", namex2 = \"fneuro\", namey1 = \"mdistr\", \n#'  namey2 = \"fdistr\",labs1 = \"husband\", labs2 = \"wive\", \n#'  lab1 = \"husbands\", lab2 = \"wives\",data = campbell)\n#'  \n#' res\n#' @export\n#' @import lavaan\n\napim_sem <- function(xname=\"x\", yname=\"y\", namex1, namex2, namey1, namey2,\n                        lab1=\"roles 1\", lab2=\"roles 2\", labs1 = \"role 1\", labs2=\"rol2\", \n                        dname, data, relx = .8, rely = .8, alpha = .05, dvarr=TRUE,  \n                        fix1k = TRUE, boottrials=50L, fix2k = TRUE){\n \n  md <- createInput(dname = dname, xname = xname, yname=yname, \n                    namex1 = namex1, namex2 = namex2, namey1 = namey1, \n                    namey2 = namey2, labs1 = labs1, labs2 = labs2, \n                    lab1 = lab1, lab2 = lab2, data = campbell)\n  \n  md <- descdyad(md)\n  \n  md <- fitBasicAPIM(md)\n  \n  # md <- k_refit(md,loww=-1.5, upp=0.2, i=1, label=c(\"husbands\",\"wives\"))\n  \n  md <- FitRestrictedModel(md)\n  \n  md <- reliab(md)\n  \n  md <- fitCorrModel(md)\n  \n  class(md) <- \"apim\"\n  \n  return(md)\n  \n}  \n\n##### Create Input #####\n\ncreateInput <- function(xname=\"x\", yname=\"y\", namex1, namex2, namey1, namey2,\n                        lab1=\"roles 1\", lab2=\"roles 2\", labs1 = \"role 1\", labs2=\"rol2\", \n                        dname, data, relx = .8, rely = .8, alpha = .05, dvarr=TRUE,  \n                        fix1k = TRUE, boottrials=50L, fix2k = TRUE){\n  # the dataset:\n#     ext <- substr(ifilename, nchar(ifilename)-3+1, nchar(ifilename))\n#     if (ext=='sav') MaDa <-  read.spss (ifilename,use.value.labels=FALSE,max.value.labels=Inf,to.data.frame=TRUE)\n#     if (ext=='csv') MaDa <- read.csv(file=ifilename,head=TRUE,sep=\",\")  \n    \n    MaDa <- data\n  # variable names:\n    vnames <- list(x=xname, y=yname)\n  # change the variable names in the dataset\n    names(MaDa)[names(MaDa)==namex1] <- \"xv1\"\n    names(MaDa)[names(MaDa)==namex2] <- \"xv2\"\n    names(MaDa)[names(MaDa)==namey1] <- \"yv1\"\n    names(MaDa)[names(MaDa)==namey2] <- \"yv2\"\n  # desired reliability:\n   rel <- list(x=relx, y=rely)\n  # labels:\n    lab <- list(lab1=lab1, lab2=lab2, labs1=labs1, labs2=labs2)\n  # Save everything in a list\n    md <- list(varnames=vnames,\n             MaDa=MaDa,\n             reliab=rel,\n             alpha=alpha,\n             dvarr= dvarr,\n             labels = lab,\n             ddname=dname,\n             bootstr = boottrials, \n             xv1=namex1,xv2=namex2,yv1=namey1,yv2=namey2,\n             # does the user wants to fix k1 and k2 in a new model:\n             fixk = fix2k, \n             singleK = fix1k\n             )\n\n  return(md)\n}\n\n\n\n\n\n\n\n##### Calculate descriptives #####\ndescdyad  = function (md){\n  \n  md$totn = nrow(md$MaDa) \n  md$x1min=min(md$MaDa$xv1, na.rm = TRUE) \n  md$x2min=min(md$MaDa$xv2, na.rm = TRUE) \n  md$x1max=max(md$MaDa$xv1, na.rm = TRUE) \n  md$x2max=max(md$MaDa$xv2, na.rm = TRUE) \n  md$x1mean=mean(md$MaDa$xv1, na.rm = TRUE) \n  md$x1sd=sd(md$MaDa$xv1, na.rm = TRUE) \n  md$x1n=describe(md$MaDa$xv1, na.rm = TRUE) [2]\n  md$x2min=min(md$MaDa$xv2, na.rm = TRUE) \n  md$x2max=max(md$MaDa$xv2, na.rm = TRUE) \n  md$x2mean=mean(md$MaDa$xv2, na.rm = TRUE) \n  md$x2sd=sd(md$MaDa$xv2, na.rm = TRUE) \n  md$x2n=describe(md$MaDa$xv2, na.rm = TRUE) [2]\n  md$y1min=min(md$MaDa$yv1, na.rm = TRUE) \n  md$y1max=max(md$MaDa$yv1, na.rm = TRUE) \n  md$y1mean=mean(md$MaDa$yv1, na.rm = TRUE) \n  md$y1sd=sd(md$MaDa$yv1, na.rm = TRUE) \n  md$y1n=describe(md$MaDa$yv1, na.rm = TRUE) [2]\n  md$y2min=min(md$MaDa$yv2, na.rm = TRUE) \n  md$y2max=max(md$MaDa$yv2, na.rm = TRUE) \n  md$y2mean=mean(md$MaDa$yv2, na.rm = TRUE) \n  md$y2sd=sd(md$MaDa$yv2, na.rm = TRUE) \n  md$y2n=describe(md$MaDa$yv2, na.rm = TRUE) [2]\n  md$MaDa$sumx = md$MaDa$xv1 + md$MaDa$xv2\n  md$MaDa$diffx = (md$MaDa$xv2 - md$MaDa$xv1)^2\n  md$msbx=(sd(md$sumx, na.rm = TRUE) )^2\n  md$mswx=mean(md$MaDa$diffx, na.rm = TRUE) \n  md$iccx=(md$msbx-md$mswx)/(md$msbx+ md$mswx)\n  md$xxn=as.numeric(describe(md$MaDa$sumx, na.rm = TRUE)[2])\n  md$Fx=md$msbx/md$mswx\n  md$pFx=1-pf(md$Fx,md$xxn-1,md$xxn)\n  md$MaDa$sumy = md$MaDa$yv1 + md$MaDa$yv2\n  md$MaDa$diffy = (md$MaDa$yv2 - md$MaDa$yv1)^2\n  md$z2T = qnorm(1-md$alpha/2)\n  md$CIv=(1- md$alpha)*100\n  if (md$alpha< .01) md$CIv=rround((1-md$alpha)*100,1)\n  if (md$alpha< .001) md$CIv=rround((1-md$alpha)*100,2)  \n  md$msby=(sd(md$MaDa$sumy, na.rm = TRUE) )^2\n  md$mswy=mean(md$MaDa$diffy, na.rm = TRUE) \n  md$iccy=(md$msby-md$mswy)/(md$msby+ md$mswy)\n  md$yyn=as.numeric(describe(md$MaDa$sumy, na.rm = TRUE) [2])\n  md$Fy=md$msby/md$mswy\n  md$pFy=1-pf(md$Fy,md$yyn-1,md$yyn)\n  md$di=0\n  if (nrow(table(md$MaDa$xv1) )==2 & nrow(table(md$MaDa$xv2) )==2) mi$di=1\n  md$p1=md$lab$labs1\n  md$p2=md$lab$labs2\n  md$missdat= 0\n  md$mtxt = \"\"\n  if (md$totn > md$x1n | md$totn > md$x2n |md$totn > md$y1n |md$totn > md$y2n)\n  { md$missdat= 1\n    md$mtxt = paste0(\"The number of cases for Person 1 on \",md$varnames$x,\" is \",md$x1n,\", for Person 2 on \",md$varnames$x,\" is \",md$x2n,\", for Person 1 on \",md$varnames$y,\" is \",md$y1n,\", and for Person 2 on \",md$varnames$y,\" is \",md$y2n,\".\") \n  }\n\n  return(md)\n}\n\n\n\n\n\n##### Fit Basic APIM Model #####\nfitBasicAPIM <- function(md, treatmissing = \"ML\", bootstr = md$bootstr){\n  \n  datafile <- md$MaDa\n  \n  ## lavaan run: 1st output\n  APIM1_out <- '\n  yv1  ~ a1*xv1\n  yv2  ~ a2*xv2\n  yv1  ~ p12*xv2\n  yv2  ~ p21*xv1\n  xv1 ~ mx1*1\n  xv2 ~ mx2*1\n  yv1 ~ my1*1\n  yv2 ~ my2*1\n  xv1 ~~ vx1*xv1\n  xv2 ~~ vx2*xv2\n  yv1 ~~ vy1*yv1\n  yv2 ~~ vy2*yv2\n  xv2 ~~ cx*xv1\n  yv2 ~~ cy*yv1\n    a_diff := a1 - a2\n    p_diff := p12 - p21\n    k1 := p12/a1\n    k2 := p21/a2\n    k_diff := k1 - k2\n    i_diff := my1 - my2\n    a_ave := (a1 + a2)/2\n    p_ave := (p12 + p21)/2\n    sum1 := (p12 + a1)/2\n    sum2 := (p21 + a2)/2\n    isum := (my1 +my2)/2\n    cont1 := a1 - p12\n    cont2 := a2 - p21\n      '\n  \n  # If user wanted to bootstrap: do\n  if (md$bootstr != 0){\n      cat(\"Start bootstrapping...\",\"Can take awhile...\", sep=\"\\n\")\n      md$fit1_o <- sem(APIM1_out,fixed.x=FALSE,data=datafile,missing=treatmissing, se=\"boot\", bootstrap= bootstr)\n      Est1 <- parameterEstimates(md$fit1_o, standardized = TRUE,level=1-md$alpha, boot.ci.type=\"perc\")\n      md$Est1 <- as.data.frame(Est1)\n      rownames(md$Est1) <- md$Est1[,4]\n    # save the results of the bootstrap CI's in md\n      md$kl1<- md$Est1[\"k1\",\"ci.lower\"]\n      md$ku1<- md$Est1[\"k1\",\"ci.upper\"]\n      md$kl2<- md$Est1[\"k2\",\"ci.lower\"]\n      md$ku2<- md$Est1[\"k2\",\"ci.upper\"]\n     # if sign difference based on bootstrap CI: save 1, if not, save 0:\n      md$kdif.l <- md$Est1[\"k_diff\",\"ci.lower\"]\n      md$kdif.u <- md$Est1[\"k_diff\",\"ci.upper\"]\n      if (md$kdif.l < 0 & 0 < md$kdif.u){\n        md$kdif.yn <- 0\n      } else{md$kdif.yn <- 1}\n  } else { \n    md$fit1_o <- sem(APIM1_out,fixed.x=FALSE,data=md$MaDa,missing=\"ML\")\n    md$Est1 <- parameterEstimates(md$fit1_o, standardized = TRUE)\n    md$Est1 <- as.data.frame(md$Est1)\n    rownames(md$Est1) <- md$Est1[,4]      \n  }\n \n# only proceed if the model converged:\n  if (md$fit1_o@Fit@iterations > 0L && !md$fit1_o@Fit@converged){\n    stop(\"Model did not converge\")\n  } else{\n    # Save results of APIM1_out in md\n    md$k1<- md$Est1[\"k1\",\"est\"]\n    md$k2<- md$Est1[\"k2\",\"est\"]\n    ppv=fitted(md$fit1_o)$cov\n    md$yvar1=ppv[\"yv1\",\"yv1\"]\n    md$xvar1=ppv[\"xv1\",\"xv1\"]\n    md$yvar2=ppv[\"yv2\", \"yv2\"]\n    md$xvar2=ppv[\"xv2\",\"xv2\"]\n    md$ryy=ppv[\"yv2\",\"yv1\"]/ppv[\"yv1\",\"yv1\"]\n    md$rxx =ppv[\"xv2\",\"xv1\"]/ppv[\"xv1\",\"xv1\"]\n    md$rx1y1=ppv[\"xv1\",\"yv1\"]/sqrt(ppv[\"yv1\",\"yv1\"]*ppv[\"xv1\",\"xv1\"])\n    md$rx2y2=ppv[\"xv2\",\"yv2\"]/sqrt(ppv[\"xv2\",\"xv2\"]*ppv[\"yv2\",\"yv2\"])\n    md$rx1y2=ppv[\"xv2\",\"yv1\"]/sqrt(ppv[\"yv1\",\"yv1\"]*ppv[\"xv2\",\"xv2\"])\n    md$rx2y1=ppv[\"xv1\",\"yv2\"]/sqrt(ppv[\"yv2\",\"yv2\"]*ppv[\"xv1\",\"xv1\"])\n    \n    # save the means for both dist. members\n    ppm=fitted(md$fit1_o)$mean\n    md$ymean1=ppm[\"yv1\"]\n    md$xmean1=ppm[\"xv1\"]\n    md$ymean2=ppm[\"yv2\"]\n    md$xmean2=ppm[\"xv2\"]\n    \n    # save for both dist. members\n    md$intr_dp = md$Est1[\"i_diff\",\"pvalue\"]\n    md$intr_d.CIl = md$Est1[\"i_diff\",\"ci.lower\"]\n    md$intr_d.CIu = md$Est1[\"i_diff\",\"ci.upper\"]\n    md$act_dp = md$Est1[\"a_diff\",\"pvalue\"]\n    md$act_d.CIl = md$Est1[\"a_diff\",\"ci.lower\"]\n    md$act_d.CIu = md$Est1[\"a_diff\",\"ci.upper\"]\n    md$part_dp = md$Est1[\"p_diff\",\"pvalue\"]\n    md$part_d.CIl = md$Est1[\"p_diff\",\"ci.lower\"]\n    md$part_d.CIu = md$Est1[\"p_diff\",\"ci.upper\"]\n    md$intr1 = md$Est1[\"my1\",\"est\"]\n    md$intr1s = md$Est1[\"my1\",\"std.all\"]\n    md$intr1z = md$Est1[\"my1\",\"z\"]\n    md$intr1p = md$Est1[\"my1\",\"pvalue\"]\n    md$intr1se = md$Est1[\"my1\",\"se\"]\n    md$intr1.CIu=md$intr1+md$intr1se*md$z2T\n    md$intr1.CIl=md$intr1-md$intr1se*md$z2T\n    md$intr2 = md$Est1[\"my2\",\"est\"]\n    md$intr2s = md$Est1[\"my2\",\"std.all\"]\n    md$intr2z = md$Est1[\"my2\",\"z\"]\n    md$intr2p = md$Est1[\"my2\",\"pvalue\"]\n    md$intr2se = md$Est1[\"my2\",\"se\"]\n    md$intr2.CIu=md$intr2+md$intr2se*md$z2T\n    md$intr2.CIl=md$intr2-md$intr2se*md$z2T\n    md$intro = md$Est1[\"i_diff\",\"est\"]\n    md$introp = md$Est1[\"i_diff\",\"pvalue\"]\n    md$introse = md$Est1[\"i_diff\",\"se\"]\n    md$intro.CIu=md$intro+md$introse*md$z2T\n    md$intro.CIl=md$intro-md$introse*md$z2T\n    md$acto = md$Est1[\"a_ave\",\"est\"]\n    md$actop = md$Est1[\"a_ave\",\"pvalue\"]\n    md$actose = md$Est1[\"a_ave\",\"se\"]\n    md$acto.CIu=md$acto+md$actose*md$z2T\n    md$acto.CIl=md$acto-md$actose*md$z2T\n    md$parto = md$Est1[\"p_ave\",\"est\"]\n    md$partop = md$Est1[\"p_ave\",\"pvalue\"]\n    md$partose = md$Est1[\"p_ave\",\"se\"]\n    md$parto.CIu=md$parto+md$partose*md$z2T\n    md$parto.CIl=md$parto-md$partose*md$z2T\n  \n    # saved the results for both actor (partner) effects\n    md$act1 = md$Est1[\"a1\",\"est\"]\n    md$act1ss = md$Est1[\"a1\",\"std.all\"]\n    md$act1z = md$Est1[\"a1\",\"z\"]\n    md$act1p = md$Est1[\"a1\",\"pvalue\"]\n    md$act1se = md$Est1[\"a1\",\"se\"]\n    md$act1.CIu=md$act1+md$act1se*md$z2T\n    md$act1.CIl=md$act1-md$act1se*md$z2T\n    md$act2 = md$Est1[\"a2\",\"est\"]\n    md$act2ss = md$Est1[\"a2\",\"std.all\"]\n    md$act2z = md$Est1[\"a2\",\"z\"]\n    md$act2p = md$Est1[\"a2\",\"pvalue\"]\n    md$act2se = md$Est1[\"a2\",\"se\"]\n    md$act2.CIu=md$act2+md$act2se*md$z2T\n    md$act2.CIl=md$act2-md$act2se*md$z2T\n    md$part1 = md$Est1[\"p12\",\"est\"]\n    md$part1ss = md$Est1[\"p12\",\"std.all\"]\n    md$part1z = md$Est1[\"p12\",\"z\"]\n    md$part1p = md$Est1[\"p12\",\"pvalue\"]\n    md$part1se = md$Est1[\"p12\",\"se\"]\n    md$part1.CIu=md$part1+md$part1se*md$z2T\n    md$part1.CIl=md$part1-md$part1se*md$z2T    \n    md$part2 = md$Est1[\"p21\",\"est\"]\n    md$part2ss = md$Est1[\"p21\",\"std.all\"]\n    md$part2z = md$Est1[\"p21\",\"z\"]\n    md$part2p = md$Est1[\"p21\",\"pvalue\"]\n    md$part2se = md$Est1[\"p21\",\"se\"]\n    md$part2.CIu=md$part2+md$part2se*md$z2T\n    md$part2.CIl=md$part2-md$part2se*md$z2T\n    md$iccY=md$Est1[\"cy\",\"est\"]\n    md$iccYs=md$Est1[\"cy\",\"std.all\"]\n    md$iccYz=md$Est1[\"cy\",\"z\"]\n    md$iccYp=md$Est1[\"cy\",\"pvalue\"]\n    md$iccY.CIl=md$Est1[\"cy\",\"ci.lower\"]\n    md$iccY.CIu=md$Est1[\"cy\",\"ci.upper\"]\n    md$iccX=md$Est1 [\"cx\",\"est\"]\n    md$iccXs=md$Est1[\"cx\",\"std.all\"]\n    md$iccXz=md$Est1[\"cx\",\"z\"]\n    md$iccXp=md$Est1[\"cx\",\"pvalue\"]\n    md$iccX.CIl=md$Est1[\"cx\",\"ci.lower\"]\n    md$iccX.CIu=md$Est1[\"cx\",\"ci.upper\"]\n    \n    # saved for both dist. roles\n    md$varx1=md$Est1[\"vx1\",\"est\"]\n    md$varx2=md$Est1[\"vx2\",\"est\"]\n    md$esd1=md$Est1[\"vy1\",\"est\"]\n    md$esd2=md$Est1[\"vy2\",\"est\"]\n    md$esd1p=onetailp(md$Est1[\"vy1\",\"pvalue\"])\n    md$esd2p=onetailp(md$Est1[\"vy2\",\"pvalue\"])\n    md$varxm1p=onetailp(md$Est1[\"vx1\",\"pvalue\"])\n    md$varxm2p=onetailp(md$Est1[\"vx2\",\"pvalue\"])\n    md$esd1.CIl=md$Est1[\"vy1\",\"ci.lower\"]\n    md$esd1.CIu=md$Est1[\"vy1\",\"ci.upper\"]\n    md$esd2.CIl=md$Est1[\"vy2\",\"ci.lower\"]\n    md$esd2.CIu=md$Est1[\"vy2\",\"ci.upper\"]\n    md$varxm1.CIl=md$Est1[\"vx1\",\"ci.lower\"]\n    md$varxm1.CIu=md$Est1[\"vx1\",\"ci.upper\"]\n    md$varxm2.CIl=md$Est1[\"vx2\",\"ci.lower\"]\n    md$varxm2.CIl=md$Est1[\"vx2\",\"ci.upper\"]\n    md$mmeanx1=md$Est1[\"mx1\",\"est\"]\n    md$mmeanx1p=md$Est1[\"mx1\",\"pvalue\"]\n    md$mmeanx1.CIl=md$Est1[\"mx1\",\"ci.lower\"]\n    md$mmeanx1.CIu=md$Est1[\"mx1\",\"ci.upper\"]\n    md$mmeany1=md$Est1[\"my1\",\"est\"]\n    md$mmeany1p=md$Est1[\"my1\",\"pvalue\"]\n    md$mmeany1.CIl=md$Est1[\"my1\",\"ci.lower\"]\n    md$mmeany1.CIu=md$Est1[\"my1\",\"ci.upper\"]\n    md$mmeanx2=md$Est1[\"mx2\",\"est\"]\n    md$mmeanx2p=md$Est1[\"mx2\",\"pvalue\"]\n    md$mmeanx2.CIl=md$Est1[\"mx2\",\"ci.lower\"]\n    md$mmeanx2.CIu=md$Est1[\"mx2\",\"ci.upper\"]\n    md$mmeany2=md$Est1[\"my2\",\"est\"]\n    md$mmeany2p=md$Est1[\"my2\",\"pvalue\"]\n    md$mmeany2.CIl=md$Est1[\"my2\",\"ci.lower\"]\n    md$mmeany2.CIu=md$Est1[\"my2\",\"ci.upper\"]\n    \n    # calculate r-squared for both dist. members.\n    md$rsq1a= inspect(md$fit1_o, 'r2')[1]\n    md$rsq1b= inspect(md$fit1_o, 'r2')[2]\n    \n    # fit indices\n    md$cs1=fitMeasures(md$fit1_o)[2]\n    md$df1=fitMeasures(md$fit1_o)[3]\n    md$pv1=fitMeasures(md$fit1_o)[4]\n    md$tli1=fitMeasures(md$fit1_o)[9]\n    md$rmsea1=fitMeasures(md$fit1_o)[23]\n    md$rmseal1=fitMeasures(md$fit1_o)[24]\n    md$rmseau1=fitMeasures(md$fit1_o)[25]\n    }\n\n    return(md)\n  }\n\n\n\n\n\n\n##### k_refit_function #####\nk_refit <- function (md,loww,upp, i, label) {\n  \n  if ((loww <  -1.0 & upp > 1.0) |  (loww <  0.0 & upp > 1.0)  | (loww <  -1.0 & upp > 0.0)) {\n    md$no_k[i] <- paste(\"The confidence interval of the\", label[i],\n               \"is too wide for determining which single model is most likely. Therefore, the value of k is not fixed to a certain value in a new model to determine its fit.\")\n    md$k[i] <- NA\n  } else if (loww <  1 & upp > 1) { \n    md$k[i] <- 1\n  } else if (loww <  0 & upp > 0){\n    md$k[i] <- 0\n  } else if (loww <  -1 & upp > -1) { \n    md$k[i] <- -1\n  } else if (loww > 0 & upp < 1) {\n    md$no_k[i] <- paste(\"It can be concluded that for the \",label[i],\n               \"the model is in between the actor-only (k = 0) and the couple (k = 1) models. Therefore k cannot be fixed to a specific value in a new model in order to determine its fit.\")\n    md$k[i] <- NA\n  } else if (loww > -1 & upp < 0) {\n    md$no_k[i] <- c(\"It can be concluded that for the \",label[i],\n               \"the model is in between the contrast (k = -1) and the actor-only (k = 0) models. Therefore k cannot be fixed to a specific value in a new model in order to determine its fit.\")\n    md$k[i] <- NA\n  } else if (upp < -1) {\n    md$no_k[i] <- c(\"It can be concluded that for the \",label[i],\n               \"the model is more extreme than the contrast model (k = -1). Therefore k cannot be fixed to a specific value in a new model in order to determine its fit.\")\n    md$k[i] <- NA\n  } else if (loww > 1) {\n    md$no_k[i] <- c(\"It can be concluded that for the \",label[i],\n               \"the model is more extreme than the couple model (k = 1). Therefore k cannot be fixed to a specific value in a new model in order to determine its fit.\")\n    md$k[i] <- NA\n  }\n  \n  return(md)\n}\n\n\n\n\n\n\n##### Fit Restricted model #####\nFitRestrictedModel <- function(md, fixk = TRUE, treatmissing=\"ML\", bootstrapSingleK = 50L){\n  \n  singleK = md$singleK\n  datafile = md$MaDa\n  \n   # if user wants to fix k1 and k2\n   if (fixk == TRUE){\n     # if actor values have substantial values\n      if (md$act1p > md$alpha & md$act2p > md$alpha & abs(md$act1ss) < .1 & abs(md$act2ss) < .1){\n        stop(\"The standardized actor effect(s) do not have a substantial value. Estimates of k would be highly unstable. Therefore, all further analyses are aborted.\") \n      } else {          \n        \n        # Run the k_refit-function\n        label <- c(md$lab$lab1, md$lab$lab2)\n        k <- list()\n        no_k <- list()\n        for (i in 1:2){\n          eval(parse(text=paste(\"md <- k_refit\", \"(md, md$kl\", i, \", md$ku\", \n                                i,\", i =\", i,\",label=label\", \")\", sep=\"\")))\n        }       \n        #     rm(k, no_k, label)\n        #     md$k <- NULL\n        #     md$no_k <- NULL\n        #     md$k[2] <- md$k[1]\n        \n        # Evaluate if both k1 and k2 could be fixed, if so, continue:\n        if (!is.na(md$k[1]) & !is.na(md$k[2])){\n          md$k1 <- md$k[1]\n          md$k2 <- md$k[2]\n          # Run the lavaan model with the k's constrained to the previously defined values\n          APIM2_2k <- paste0('\n           yv1  ~ a1*xv1\n           yv2  ~ a2*xv2\n           P1 = ~ 0\n           P2 = ~ 0\n           P1  ~ a1*xv2\n           P2  ~ a2*xv1\n           yv1  ~ ',md$k[1],'*P1\n           yv2  ~ ',md$k[2],'*P2\n           xv1 ~ mx1*1\n           xv2 ~ mx2*1\n           yv1 ~ my1*1\n           yv2 ~ my2*1\n           xv1 ~~ vx1*xv1\n           xv2 ~~ vx2*xv2\n           yv1 ~~ vy1*yv1\n           yv2 ~~ vy2*yv2\n           xv2 ~~ c1*xv1\n           yv2 ~~ c2*yv1'\n           )\n          fit2_2k <- sem(APIM2_2k,fixed.x=FALSE, data=datafile,missing=treatmissing)\n          Est2_2k <- parameterEstimates(fit2_2k, standardized = TRUE,level=1-md$alpha)\n          \n          # Subtract Chi-square test statistic to come to a conclusion\n          md$csk2 <- fitMeasures(fit2_2k)[\"chisq\"]\n          md$dfk2 <- fitMeasures(fit2_2k)[\"df\"]\n          md$pvk2 <- fitMeasures(fit2_2k)[\"pvalue\"]\n          \n            \n        # If one or both values of k cannot be derived from their CI AND no sign difference between k1 and k2\n        # AND user specified he/she wants a single k in their model\n      } else if (md$singleK == FALSE){\n          # if the user does not want to calculate a single k: abort the analyses (since the k's cannot be fixed)\n          stop(\"The analyses is aborted since one or both k's could not be constrained to a single value.\")\n          \n      } else if ((is.na(md$k[1]) | is.na(md$k[2]))  &&  md$kdif.yn == 0 && md$singleK == TRUE){      \n          # if the user wants to: specify a model with a single k and bootstrap the CI\n          APIM2_1k <- '\n          yv1  ~ a1*xv1\n          yv2  ~ a2*xv2\n          P1 = ~ 0\n          P2 = ~ 0\n          P1  ~ a1*xv2\n          P2  ~ a2*xv1\n          yv1  ~ k*P1\n          yv2  ~ k*P2\n          xv1 ~ mx1*1\n          xv2 ~ mx2*1\n          yv1 ~ my1*1\n          yv2 ~ my2*1\n          xv1 ~~ vx1*xv1\n          xv2 ~~ vx2*xv2\n          yv1 ~~ vy1*yv1\n          yv2 ~~ vy2*yv2\n          xv2 ~~ c1*xv1\n          yv2 ~~ c2*yv1'\n          \n          cat(\"Model with a single k is fitted...\",\"Start bootstrapping...\",\"Can take awhile...\", sep=\"\\n\")\n          fit2_kb <- sem(APIM2_1k,fixed.x=FALSE,data=md$MaDa,missing=treatmissing, se = \"boot\", bootstrap= bootstrapSingleK)\n          Est2_kb <- parameterEstimates(fit2_kb, standardized = TRUE,level=1-md$alpha, boot.ci.type=\"perc\")\n          \n          # save the results in md\n          md$kl <- Est2_kb[7,9]\n          md$ku <- Est2_kb[7,10]\n          md$k <- Est2_kb[7,5] \n        \n          # To what value can this k be fixed based on its CI?\n          label <- paste(md$lab$lab1,\"and\", md$lab$lab2, sep=\" \")      \n          k <- list()\n          no_k <- list()\n          md <- k_refit(md, md$kl, md$ku, i = 1, label=label)   \n          if (!is.na(md$k[1])){\n              md$k <- md$k[1]\n              APIM3_1k <- paste0('\n              yv1  ~ a1*xv1\n              yv2  ~ a2*xv2\n              P1 = ~ 0\n              P2 = ~ 0\n              P1  ~ a1*xv2\n              P2  ~ a2*xv1\n              yv1  ~ ',md$k[1],'*P1\n              yv2  ~ ',md$k[1],'*P2\n              xv1 ~ mx1*1\n              xv2 ~ mx2*1\n              yv1 ~ my1*1\n              yv2 ~ my2*1\n              xv1 ~~ vx1*xv1\n              xv2 ~~ vx2*xv2\n              yv1 ~~ vy1*yv1\n              yv2 ~~ vy2*yv2\n              xv2 ~~ c1*xv1\n              yv2 ~~ c2*yv1'\n              )\n          \n            fit3_1k <- sem(APIM3_1k,fixed.x=FALSE, data=datafile,missing=treatmissing)\n            Est3_1k <- parameterEstimates(fit3_1k, standardized = TRUE,level=1-md$alpha)\n            \n            # Subtract Chi-square test statistic to come to a conclusion\n            md$csk <- fitMeasures(fit3_1k)[\"chisq\"]\n            md$dfk <- fitMeasures(fit3_1k)[\"df\"]\n            md$pvk <- fitMeasures(fit3_1k)[\"pvalue\"]          \n          }}}}\n  \n return(md)\n}\n      \n\n\n##### Compute Reliability #####\nreliab = function (md){ \n  md$relok =1-md$reliab$y*md$reliab$x\n  md$reloor=0\n  md$texrel=\"\"\n  #DAK With Distinguishable dyads, in principle the reliablity for the two members on X could be different; I guess for now we just presume they are the same and say something about that in the output\n  md$texrel=paste0(\"The estimates here presume that the reliability of measurement of \",md$varnames$x,\" is \",rrround(md$reliab$x,2),\" and of \",md$varnames$y,\" is \",rrround(md$reliab$y,2),\".\")\n  if (md$reliab$x < abs(md$rxx))\n  { md$texrel=paste0(md$texrel,\"  The proposed reliablity for \",md$varnames$x,\" must be at least as large as the correlation between the two persons' scores on \",md$varnames$x,\" which is not the case.\")\n    md$reloor = 1  } \n  if (md$reliab$y < abs(md$ryy))\n  { md$texrel=paste0(md$texrel,\"  The proposed reliablity for \",md$varnames$y,\" must be at least as large as the correlation between the two persons' scores on \",md$varnames$y,\" which is not the case.\")\n    md$reloor = 1 } \n  md$reloor = 0\n  if (sqrt(md$reliab$x*md$reliab$y) < abs(md$rx1y1) | sqrt(md$reliab$x*md$reliab$y) < abs(md$rx2y2) |  sqrt(md$reliab$x*md$reliab$y) < abs(md$rx1y2)  | sqrt(md$reliab$x*md$reliab$y) < abs(md$rx2y1))\n  { md$texrel=paste0(md$texrel,\"  The proposed reliablities are too low given the magnitude of the correlations between \",md$varnames$x,\" and \",md$varnames$y,\".\")\n    md$reloor = 1} \n  if (md$reloor == 1)md$texrel=paste0(md$texrel,\"  Correction for measurement error cannot be preformed.  Please pick new and higher values of the reliabilites or correlated errors if you want corrections for measurement error.\") \n  # I made these for both dist. members\n  md$xesd1=sqrt(md$xvar1*(1-md$reliab$x))\n  md$xesd2=sqrt(md$xvar2*(1-md$reliab$x))\n  md$yesd1=sqrt(md$yvar1*(1-md$reliab$y))\n  md$yesd2=sqrt(md$yvar2*(1-md$reliab$y))\n  md <<- as.list(md)\n  return(md)\n}\n\n\n\n\n\n##### Run correcting for unreliablity #####\nfitCorrModel <- function(md, treatmissing = \"ML\"){\n  \n  datafile = md$MaDa\n  bootstr = md$bootstr\n  \n  if (md$relok < 0 | md$reloor != 0){\n    stop(\"The model correcting for unreliability was not fitted\")\n  } else{\n    # lavaan run:\n    APIM3 <- paste0('\n    xv1 ~~ 0*xv1  \n    xv2 ~~ 0*xv2\n    yv1 ~~ 0*yv1\n    yv2 ~~ 0*yv2\n    xx1 ~~ 1*xx1  \n    xx2 ~~ 1*xx2\n    yy1 ~~ 1*yy1\n    yy2 ~~ 1*yy2\n    xx1 =~ 0\n    xx2 =~ 0\n    yy1 =~ 0\n    yy2 =~ 0\n    xv1  ~ ',md$xesd1,'*xx1\n    yv1  ~ ',md$yesd1,'*yy1\n    xv2  ~ ',md$xesd2,'*xx2\n    yv2  ~ ',md$yesd2,'*yy2\n    xfact1  =~ 1*xv1\n    yfact1  =~ 1*yv1\n    xfact2  =~ 1*xv2\n    yfact2  =~ 1*yv2\n    yfact1  ~ a1*xfact1 + p12*xfact2 \n    yfact2  ~ a2*xfact2 + p21*xfact1\n    xv1 ~ mx1*1\n    xv2 ~ mx2*1\n    yv1 ~ my1*1\n    yv2 ~ my2*1\n    xfact1  ~~ vx1*xfact1\n    xfact2  ~~ vx2*xfact2\n    yfact1  ~~ vy1*yfact1\n    yfact2  ~~ vy2*yfact2\n    xfact1  ~~ xfact2\n    yfact1  ~~ yfact2\n    ck1 := p12/a1\n    ck2 := p21/a2\n    ck_diff := ck1 - ck2\n    ')\n    cat(\"Start bootstrapping...\",\"Can take awhile...\", sep=\"\\n\")\n    md$fit3 <- sem(APIM3,fixed.x=FALSE,data=datafile,missing=treatmissing, se=\"boot\", bootstrap = md$bootstr)\n    Est3 = parameterEstimates(md$fit3, standardized = TRUE,level=1-md$alpha, boot.ci.type=\"perc\")\n    \n    # Only proceed if the model converged:\n    if (md$fit3@Fit@iterations > 0L && !md$fit3@Fit@converged){\n      stop(\"Model did not converge\")\n    } else{\n      \n      Est3_sub <- as.data.frame(Est3[c(21:34, 43:45),])\n      Est3_sub[c(13:14),4] <- c(\"icx\", \"icy\")\n      rownames(Est3_sub) <- Est3_sub[,4]  \n      \n      \n      # Save estimates  \n      # k\n      md$ck1 <- Est3_sub[\"ck1\",\"est\"]\n      md$ck2 <- Est3_sub[\"ck2\",\"est\"]\n      md$ck1.CIl <- Est3_sub[\"ck1\",\"ci.lower\"]\n      md$ck2.CIl <- Est3_sub[\"ck2\",\"ci.lower\"]\n      md$ck1.CIu <- Est3_sub[\"ck1\",\"ci.upper\"]\n      md$ck2.CIu <- Est3_sub[\"ck2\",\"ci.upper\"]\n      md$ckdif.CIl <- Est3_sub[\"ck_diff\",\"ci.lower\"]\n      md$ckdif.CIu <- Est3_sub[\"ck_diff\",\"ci.upper\"]\n      if (md$ckdif.CIl < 0 & 0 < md$ckdif.CIu){\n        md$ckdif.yn <- 1\n      } else{md$ckdif.yn <- 0}\n      \n      # actor effects for both dist. members\n      md$act13 <- Est3_sub[\"a1\",\"est\"]\n      md$act1s3 <- Est3_sub[\"a1\",\"std.all\"]\n      md$act1z3 <- Est3_sub[\"a1\",\"z\"]\n      md$act1p3 <- Est3_sub[\"a1\",\"pvalue\"]\n      md$act1se3 <- Est3_sub[\"a1\",\"se\"]\n      md$act1.CIu3<-md$act13+md$act1se3*md$z2T\n      md$act1.CIl3<-md$act13-md$act1se3*md$z2T  \n      md$act23 <- Est3_sub[\"a2\",\"est\"]\n      md$act2s3 <- Est3_sub[\"a2\",\"std.all\"]\n      md$act2z3 <- Est3_sub[\"a2\",\"z\"]\n      md$act2p3 <- Est3_sub[\"a2\",\"pvalue\"]\n      md$act2se3 <- Est3_sub[\"a2\",\"se\"]\n      md$act2.CIu3<-md$act23+md$act2se3*md$z2T\n      md$act2.CIl3<-md$act23-md$act2se3*md$z2T\n      \n      # partner effects for both dist. members\n      md$part13 <- Est3_sub[\"p12\",\"est\"]\n      md$parts13 <- Est3_sub[\"p12\",\"std.all\"]\n      md$partz13 <- Est3_sub[\"p12\",\"z\"]\n      md$partp13 <- Est3_sub[\"p12\",\"pvalue\"]\n      md$part13se <- Est3_sub[\"p12\",\"se\"]\n      md$part1.CIu3<-md$part13+md$part13se*md$z2T\n      md$part1.CIl3<-md$part13-md$part13se*md$z2T\n      md$part23 <- Est3_sub[\"p21\",\"est\"]\n      md$parts23 <- Est3_sub[\"p21\",\"std.all\"]\n      md$partz23 <- Est3_sub[\"p21\",\"z\"]\n      md$partp23 <- Est3_sub[\"p21\",\"pvalue\"]\n      md$part23se <- Est3_sub[\"p21\",\"se\"]\n      md$part1.CIu3<-md$part23+md$part23se*md$z2T\n      md$part1.CIl3<-md$part23-md$part23se*md$z2T\n      \n      md$iccY3<- Est3_sub[\"icy\",\"est\"]\n      md$iccYs3<-Est3_sub[\"icy\",\"std.all\"]\n      md$iccYz3<-Est3_sub[\"icy\",\"z\"]\n      md$iccYp3<-Est3_sub[\"icy\",\"pvalue\"]\n      md$iccY.CIl3<-Est3_sub[\"icy\",\"ci.lower\"]\n      md$iccY.CIu3<-Est3_sub[\"icy\",\"ci.upper\"]\n      \n      md$iccX3<-Est3_sub [\"icy\",\"est\"]\n      md$iccXs3<-Est3_sub[\"icy\",\"std.all\"]\n      md$iccXz3<-Est3_sub[\"icy\",\"z\"]\n      md$iccXp3<-Est3_sub[\"icy\",\"pvalue\"]\n      md$iccX.CIl3<-Est3_sub[\"icy\",\"ci.lower\"]\n      md$iccX.CIu3<-Est3_sub[\"icy\",\"ci.upper\"]\n      \n      # esd for both dist. members\n      md$esd13<-Est3_sub[\"vy1\",\"est\"]\n      md$esd23<-Est3_sub[\"vy2\",\"est\"]\n      md$esd1p3<-onetailp(Est3_sub[\"vy1\",\"pvalue\"])\n      md$esd2p3<-onetailp(Est3_sub[\"vy2\",\"pvalue\"])\n      md$esd1.CIl3<-Est3_sub[\"vy1\",\"ci.lower\"]\n      md$esd1.CIu3<-Est3_sub[\"vy1\",\"ci.upper\"]\n      md$esd2.CIl3<-Est3_sub[\"vy2\",\"ci.lower\"]\n      md$esd2.CIu3<-Est3_sub[\"vy2\",\"ci.upper\"]\n      \n      \n      # r-squared for both dist. members\n      md$rsq3a<- 0\n      md$rsq3b<- 0\n      if (md$esd13 > 0) md$rsq3a= inspect(md$fit3, 'r2')[9]\n      if (md$esd23 > 0) md$rsq3b= inspect(md$fit3, 'r2')[10]\n    }\n  }\n  \n  return(md)\n  }\n\n\n\n\n\n\n##### Text output #####\n\nprint.apim <- function(md){\n  \nout<-capture.output(summary(md$fit1_o))\n\n# write output in a textfile.\ncat(\"\\n                                 APIM: Distinguishable Dyads Using lavaan \\n \",\n    \"####################################################################\",\n    \"#              Standard Model (Distinguishable members)            #\",\n    \"#################################################################### \\n\",\n    out, sep = \"\\n\")\n\n# if no sign. difference in actor nor partner effects: advise to use indistinguishable method\nif (md$Est1[15,]$pvalue > md$alpha & md$Est1[16,]$pvalue > md$alpha){\n  cat(\"\\n ***WARNING*** \\n Please use the method for indistinguishable members since a model with equal actor and partner effects is more appropriate for this dataset! \\n\",sep = \"\\n\")}\n\ncat(\"\\n  \\n\",\n    \"#################################################################### \\n\",\n    \"#        DataToText: Standard Model (Distinguishable members)      # \\n\",\n    \"#################################################################### \\n \\n\",\n    \"Introduction \\n\",\n    \"------------  \\n\",\n    \"      The focus of this study is the investigation of the effect of \", md$varnames$x,\" on \", md$varnames$y,\" for \",md$lab$lab1,\" and \",md$lab$lab2,\".\",\n    \" Both the effect of own \",md$varnames$x,\" (actor) and the effect of partner's \", md$varnames$x,\" (partner) on \", md$varnames$y,\" are studied. \",\n    \"The total number of dyads is \", md$totn,        \n    sep=\"\")\nif (md$missdat == 0) cat(\", and there are no missing data. \")\nif (md$missdat == 1) cat(\", and there are missing data for one or more of the variables:\",md$mtxt,\".\")\ncat(\"The dyad members are treated as if they are distinguishable by the variable \",md$ddname,\".\",sep = \"\")\nif (.05 != md$alpha){cat(\"\\n For all these analyses, alpha is set at\",md$alpha,\".\",sep = \"\")}\n\n\n\ncat(\"\\n  \\n\",\n    \"Analyses \\n\",\n    \"-------- \\n\",\n    \"      The analyses use structural equation modeling with maximum likelihood estimation using the program lavaan. The tests of coefficients are Z tests. \",\n    \"Effect sizes for actor and partner effects are partial correlations and d when the predictor is dichotomous. Betas are given twice, one using the overall standard deviation across all persons (o) for standardization and a second using the standard deviation for \",\n    md$lab$lab1,\" and \",md$lab$lab2,\" separately (s). If betas are to be compared across members, the beta (o) value should be examined. For all these analyses, alpha is set at \",md$alpha,\".\",\n    \" The descriptive statistics of the raw variables are contained in Table 1 and the FIML estimated means and standard deviations in Table 2. \", \n    sep =\"\")\n\n\nif (md$missdat == 0){cat(\"Because there are no missing data, the raw and the FIML means should be the same the FIML standard deviations differ from the raw ones by the square root of N - 1 divided by N.\", sep =\"\")}\n\ncat(\"\\n  \\n\",\n    \"Results \\n\",\n    \"------- \\n\",\n    sep =\"\")\n\n# Only output the text if model converged:\nif (md$fit1_o@Fit@iterations > 0L && !md$fit1_o@Fit@converged){\n  cat(\"\\n       ERROR: model did not converge \\n \\n\",sep=\"\")\n} else{\n  cat(\"\\n       The lavaan model converged after \", md$fit1_o@Fit@iterations, \" iterations. \\n      A summary of results of the APIM analyses is contained in Table 3 and the overall effects in Table 4.\", \n      sep=\"\")\n  \n  cat(\" The variance of the errors for the \", md$lab$lab1, \" and \", md$lab$lab2, \" are \", rround(md$esd1,3), \" and \",rround(md$esd2,3), \", respectively.\",\n      \" The R squared for the \", md$lab$lab1,\" is \",rrround(md$rsq1a,3),\", for the \", md$lab$lab2, \" it is \", rrround(md$rsq1b,3),\n      \". The partial intraclass correlation for \",md$varnames$y,\" controlling for actor and partner variables is equal to \",rrround(md$iccYs,3),\" and is\",knt(md$iccYp,md$alpha),\n      \" statistically significant (\",pval(md$iccYp),\", 95% CI [\", md$iccY.CIl, \", \", md$iccY.CIu, \"])\",\n      sep=\"\")\n  if (md$iccY>.1) cat(\" Thus, when one member of the dyad scores high (low) on this construct, the other member also tends to have a high (low) score. \\n\", sep=\"\")\n  if (md$iccY < -.1) cat(\" Thus, there is no clear trend in the scores of both members of the dyad. \\n\",sep=\"\")\n  cat(\"\\n        The intercept (the predicted score on \",md$varnames$y,\" when the actor and partner variables equal zero) for \",md$lab$lab1,\" is equal to \",rround(md$intr1,3),\" and is\",knt(md$intr1p,md$alpha),\n      \" statistically significant (\",pval(md$intr1p), \", 95% CI [\", round(md$intr1.CIl,2), \", \", round(md$intr1.CIu,2), \"]).\",  \n      \" The intercept for \",md$lab$lab2,\" is equal to \",rround(md$intr2,3),\" and is\",knt(md$intr2p,md$alpha),\" statistically significant (\",\n      pval(md$intr2p),  \", 95% CI [\", round(md$intr2.CIl,2),\", \", round(md$intr2.CIu,2), \"]).\",    \n      \" The test that the two intercepts are equal is\",knt(md$intr_dp,md$alpha),\" statistically significant (\",\n      pval(md$intr_dp),\", 95% CI [\", round(md$intr_d.CIl,2),\", \", round(md$intr_d.CIu,2), \"]).\", \n      \"  The difference in intercepts is equal to \",rround(md$intro,3),\" and is\",knt(md$introp,md$alpha),\" statistically significant (\",\n      pval(md$introp),\", 95% CI [\", round(md$intro.CIl,2),\", \", round(md$intro.CIu,2), \"]).\", sep=\"\")\n  \n  # DAK I think this goes.\n  # Only describe the output when actor or partner effects differ signifcantly\n  # if (Est1[15,]$pvalue > .05 & Est1[16,]$pvalue > .05){\n  #  cat(\"\\n \\n The method for indistinguishable members would be more appropriate for this dataset since no difference in actor nor partner effects could be withdrawn.\")\n  #}\n  \n  # report about actor and partner effects\n  #Converts the actor effect to a partial correlation, an effect size measure\n  \n  # Check these\n  md$act1r = md$act1ss*sqrt((1-md$rxx^2)/(1-md$rx2y1^2))\n  md$act2r = md$act2ss*sqrt((1-md$rxx^2)/(1-md$rx1y2^2))\n  md$part1r = md$part1ss*sqrt((1-md$ryy^2)/(1-md$rx1y2^2))\n  md$part2r = md$part2ss*sqrt((1-md$ryy^2)/(1-md$rx2y1^2))\n  \n  \n  md$xsd = sqrt((md$xvar1 + md$xvar1)/2)\n  md$ysd = sqrt((md$yvar1 + md$yvar1)/2)\n  \n  md$act1so= md$act1*md$xsd/md$ysd\n  md$act2so= md$act2*md$xsd/md$ysd\n  md$part1so= md$part1*md$xsd/md$ysd\n  md$part2so= md$part2*md$xsd/md$ysd\n  \n  esst1=md$act1r\n  esst2=md$act2r\n  if (md$di==1) {\n    esst1=md$act1/md$esd1\n    esst2=md$act2/md$esd2}\n  ttu1=paste0(effszm(md$di), rrround(esst1,3),effsz(esst1,md$di),\").\")\n  ttu2=paste0(effszm(md$di), rrround(esst2,3),effsz(esst2,md$di),\").\")\n  \n  cat(\"\\n       The actor effect for the \", md$lab$lab1, \" is equal to \",rround(md$act1,3),\" (\",\n      pval(md$act1p),\", 95% CI [\", round(md$act1.CIl,2),\", \", round(md$act1.CIu,2), \"])\",\n      \". The the overall standardized effect for the \",md$lab$lab1,\" is \", rround(md$act1so,3),ttu1,\n      \"  The actor effect for the \", md$lab$lab2, \" is equal to \",rround(md$act2,3),\" (\",\n      pval(md$act2p),\", 95% CI [\", round(md$act2.CIl,2),\", \", round(md$act2.CIu,2),\"])\",\n      \" and the overall standardized actor effect for the \",md$lab$lab2,\" is \", rround(md$act2so,3),ttu2, \n      \"  The test that the two actor effects are equal is\",knt(md$act_dp,md$alpha),\" statistically significant\",\n      pval(md$act_dp),\", 95% CI [\", round(md$act_d.CIl,2), \", \", round(md$act_d.CIu,2),\"]).\",\n      \" The overall actor effect is equal to \",rround(md$acto,3),\" and is\",knt(md$actop,md$alpha),\" statistically significant (\",\n      pval(md$actop),\", 95% CI [\", round(md$acto.CIl,2), \", \", round(md$acto.CIu,2),\"]).\",\n      sep=\"\")\n  \n  esst1=md$part1r\n  esst2=md$part2r\n  if (md$di==1) {\n    esst1=md$part1/md$esd1\n    esst2=md$part2/md$esd2}\n  ttu1=paste0(effszm(md$di), rrround(esst1,  3),effsz(esst1,md$di),\").\")\n  ttu2=paste0(effszm(md$di), rrround(esst2,  3),effsz(esst2,md$di),\").\")\n  \n  cat(\"\\n  \\n\")\n  \n  cat(\"       The partner effect of the \", md$lab$lab1, \" on the \",md$lab$lab2,\" is equal to \",rround(md$part1,3),\", which is\",knt(md$part1p,md$alpha),\" statistically significant (\",\n      pval(md$part1p),\", 95% CI [\", round(md$part1.CIl,2),\", \", round(md$part1.CIu,2), \"])\",\n      \", and its overall standardized effect is \",rround(md$part1so,3),ttu1, \n      \" The partner effect of the \", md$lab$lab2,\" on the \", md$lab$lab1,\" is equal to \",rround(md$part2,3),\" and is\",knt(md$part2p,md$alpha),\" statistically significant (\",\n      pval(md$part2p),\", 95% CI [\", round(md$part2.CIl,2),\", \", round(md$part2.CIu,2), \"])\",\n      \" and its overall standardized partner effect is \",rround(md$part2so,3),ttu2, \n      \"  The test that the two partner effects are equal is\",knt(md$part_dp,md$alpha),\" statistically significant (\",\n      pval(md$part_dp),\", 95% CI [\", round(md$part_d.CIl,2),\", \", round(md$part_d.CIu,2), \"]).\",\n      \"  The overall partner effect is equal to \",rround(md$parto,3),\" is\",knt(md$partop,md$alpha),\" statistically significant (\",\n      pval(md$partop),\", 95% CI [\", round(md$parto.CIl,2),\", \", round(md$parto.CIu,2), \"]).\",\n      sep=\"\")\n  \n  if (md$act1p > md$alpha & md$act2p > md$alpha & abs(md$act1ss) < .1 & abs(md$act2ss) < .1){\n    stop(\"The standardized actor effect(s) do not have a substantial value. Therefore, estimates of k would be highly unstable and all further analyses are aborted.\") \n  } else{\n    cat(\"\\n \\n       Because the standardized actor effects of both\", md$lab$lab1, \"and\", md$lab$lab2, \n        \"are greater than .1 in absolute value and they are statistically significant, k (i.e. the ratio of the partner effect to the actor effect) can be interpreted in the output. \")\n    \n    # DAK I think we still report the two k's even if they do not differ.\n    #    if (md$kp < .05)\n    \n    cat(\"Here, k1 represents the effect of \", md$lab$lab1, \" on \", md$lab$lab2, \" and k2 the effect of \", md$lab$lab2, \" on \", md$lab$lab1,\n        #          \".  Because k1 differs significantly from k2, both k's need to be interpreted separately \n        \". The value of k1 equals \", round(md$k1,2), \" and k2 equals \", \n        \n        round(md$k2,2),\".  Their 95% percentile bootstrap confidence intervals range from \", round(md$kl1,2), \" to \", round(md$ku1,2), \" and \", round(md$kl2,2), \n        \" to \", round(md$ku2,2), \", respectively. So, for the \", md$lab$lab1, \", it can be concluded that \", kcon(md$kl1,md$ku1),\n        \" For the \", md$lab$lab2, \", the confidence interval of k2 shows that \", kcon(md$kl2,md$ku2),\n        sep=\"\"\n    )\n\n    \n    if (!is.na(md$k[1]) & !is.na(md$k[2])){\n      cat(\" When investigating the relative fit of the model with k1 fixed to\", md$k[1], \"and k2 fixed to\",  md$k[2]\n          )   \n      if (md$pvk2 < .05){\n        cat(\", the Chi-Square test statistic with \", md$dfk2, \" df is equal to \", round(md$csk2,3), \" (p = \", round(md$pvk2,3) , \"). This indicates a poor fit for the model with both k's fixed to \",md$k[1],\". \\n \\n\", \n            sep = \"\")\n      } else {\n        cat(\" the Chi-Square test statistic with \", md$dfk2, \" df is equal to \", round(md$csk2,3), \" (p = \", round(md$pvk2,3) , \"). This indicates a good fit for the model with both k's fixed to \",md$k[2],\". \\n \\n\", \n            sep = \"\")\n      }\n  } else if (md$singleK == FALSE){\n    # if the user does not want to calculate a single k: abort the analyses (since the k's cannot be fixed)\n    cat(\"The analyses were aborted since one or both k's could not be constrained to a single value.\")\n    \n  } else if ((is.na(md$k[1]) | is.na(md$k[2]))  &&  md$kdif.yn == 0 && md$singleK == TRUE) {\n      cat(\"\\n \\n       Since k1 and k2 do not differ significantly (95% CI [\", round(md$kdif.l,2),\", \", round(md$kdif.u,2), \" a new model with a single k for both \", \n          md$lab$lab1, \" and \", md$lab$lab2, \". In this new model k is estimated to be \", round(md$k,2),\n          \", with its percentile bootstrap confidence interval ranging from \", round(md$kl,2), \" to \", round(md$ku,2),\n          \". Therefore, it can be concluded that \", kcon(md$kl,md$ku), \"\\n\",    \n          sep=\"\")\n      if (!is.null(md$k_fix)){\n        cat(\" When investigating the relative fit of the model with both k's fixed to\", md$k_fix)\n        if (md$pvk < .05){\n          cat(\"the Chi-Square test statistic with \", md$dfk, \" df is equal to \", round(md$csk,3), \" (p = \", round(md$pvk,3) , \"). This indicates a poor fit for the model with both k's fixed to \",k_refit1(md$kl,md$ku),\".\", \n              sep = \"\")\n        } else {\n          cat(\", the Chi-Square test statistic with \", md$dfk, \" df is equal to \", round(md$csk,3), \" (p = \", round(md$pvk,3) , \"). This indicates a good fit for the model with both k's fixed to \",k_refit1(md$kl,md$ku),\".\", \n              sep = \"\")\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n# Text with the reliablity of correction run done.\nif (md$relok > 0)\n{\n  out2<-capture.output(summary(md$fit3))\n  cat(\"\\n \\n \\n \\n \\n####################################################################\",\n      \"#                  Run Correcting for Unreliability                #\",\n      \"#################################################################### \\n\",\n      out2, \n      sep=\"\\n\")\n}\n\n\n\ncat(\"\\n #################################################################### \\n\",\n    \"#          DataToText: Run Correcting for Unreliability            # \\n\",\n    \"#################################################################### \\n \\n\",\n    \"    This section describes the lavaan run which corrects for unreliability.\")\n\n# Only output the text if the model converge\nif (md$fit3@Fit@iterations > 0L && !md$fit3@Fit@converged){\n  cat(\"\\n       ERROR: model did not converge \\n \\n\",sep=\"\")\n} else{\n  cat(\"\\n       The lavaan model converged after \", md$fit3@Fit@iterations, \" iterations.\",sep=\"\")\n  \n  md$txt7 = md$texrel\n  if (md$reloor == 0) {\n    \n    cat(md$txt7,\" The actor effect of the \", md$lab$lab1,  \" is equal to \",rround(md$act13,3),\" (\",\n        pval(md$act1p3), \", 95% CI [\", round(md$act1.CIl3,2),\", \", round(md$act1.CIu3,2), \"])\",\n        \". The overall standardized actor effect is \",rrround(md$act1s3,3),\".\",\n        \" The actor effect of the \", md$lab$lab2,  \" is equal to \",rround(md$act23,3),\" and is\",knt(md$act2p3,md$alpha),\" statistically significant (\",\n        pval(md$act2p3), \", 95% CI [\", round(md$act2.CIl3,2),\", \", round(md$act2.CIu3,2), \"])\",\n        \". The overall standardized actor effect is \",rrround(md$act2s3,3),\".\",\n        \"\\n The partner effect of the \", md$lab$lab1, \" is equal to \",rround(md$part13,3),\" and is \",knt(md$partp13,md$alpha),\" statistically significant (\",\n        pval(md$partp13), \", 95% CI [\", round(md$part1.CIl3,2),\", \", round(md$part1.CIu3,2), \"])\",\n        \". Their standardized partner effects equals \", rrround(md$parts13,3),\".\",\n        \" For the \", md$lab$lab2, \", the partner effect is equal to \",rround(md$part23,3),\" and is\",knt(md$partp23,md$alpha),\" statistically significant (\",\n        pval(md$partp23), \", 95% CI [\", round(md$part1.CIl3,2),\", \", round(md$part1.CIu3,2),\"])\",\n        \". The standardized effect is \", rrround(md$parts23,3), \".\",\n        sep=\"\")\n    \n    \n    # Use for-loop to create output for both husbands and wifes\n    for (i in 1:2){\n      if (eval(parse(text=paste(\"md$esd\",i,\"3\", sep=\"\"))) < 0) {\n        cat(\"The variance of the errors for the\", eval(parse(text=paste(\"md$lab$lab\",i, sep=\"\"))), \"is negative which likely indicates that the reliabilities are too high.\", \n            \"Because of the negative error variance, the partial intraclass correlation for\",md$varnames$y,\"controlling for actor and partner variables is undefined.\"\n            )\n        \n      }else if (eval(parse(text=paste(\"md$esd\",i,\"3\", sep=\"\"))) >= 0){\n        cat(\" For the \", eval(parse(text=paste(\"md$lab$lab\",i, sep=\"\"))), \" the variance of the errors is \", round(eval(parse(text=paste(\"md$esd\",i,\"3\", sep=\"\"))),3),\".\",\n            sep = \"\"\n        )}\n    }\n    \n    \n    cat(\" The R squared for the \", md$lab$lab1,\" is \",rrround(md$rsq3a,3),\", for the \", md$lab$lab2, \" it is \", rrround(md$rsq3b,3),\".\",\n        sep = \"\")\n    \n    if (md$rsq3a > 1 |md$rsq3b > 1) cat(\" This correlation is out of range and likely one or both of the reliability values is too large.\", \n                                        sep = \"\") \n    \n    \n    cat(\" The partial intraclass correlation for \",md$varnames$y,\" controlling for actor and partner variables is equal to \",rrround(md$iccYs3,3),\n        \" and is\",knt(md$iccYp3,md$alpha),\" statistically significant (\",\n        pval(md$iccYp3),\", 95% CI [\", round(md$iccY.CIl3,2),\", \", round(md$iccY.CIu3,2), \"]).\",\n        sep = \"\") \n    if (md$iccYs3^2 > 1) cat(\" (This correlation is out of range and likely one or both of the reliability values is too large.)\",\n                             sep = \"\") \n    cat(\" The intraclass correlation between the actor and partner variables is equal to \",rrround(md$iccXs3,3),\" and is\",knt(md$iccXp3,md$alpha),\n        \" statistically significant (\",\n        pval(md$iccXp3), \" 95% CI [\", round(md$iccX.CIl3,2),\", \", round(md$iccX.CIu3,2), \"]).\",\n        sep = \"\") \n    if (md$iccXs3^2 > 1) cat(\" (This correlation is out of range and likely one or both of the reliability values is too large.)\",\n                             sep = \"\")  \n  }\n  \n  \n  \n  if (md$act1p3 > md$alpha & md$act2p3 > md$alpha & abs(md$act1s3) < .1 & abs(md$act2s3) < .1){\n    stop(\"The standardized actor effect(s) do not have a substantial value. Therefore, estimates of k would be highly unstable and all further analyses are aborted.\") \n  } else{\n    cat(\"\\n \\n       Because the standardized actor effects of both\", md$lab$lab1, \"and\", md$lab$lab2, \n        \"are greater than .1 in absolute value and they are statistically significant, k (i.e. the ratio of the partner effect to the actor effect) can be interpreted in the output. \"\n        )\n    \n    # DAK I think we still report the two k's even if they do not differ.\n    \n    cat(\"Here, k1 represents the effect of \", md$lab$lab1, \" on \", md$lab$lab2, \" and k2 the effect of \", md$lab$lab2, \" on \", md$lab$lab1,\n        \". The value of k1 equals \", round(md$k1,2), \" and k2 equals \",       \n        round(md$k2,2),\".  Their 95% percentile bootstrap confidence intervals range from \", round(md$ck1.CIl,2), \" to \", round(md$ck1.CIu,2), \" and \", round(md$ck2.CIl,2), \n        \" to \", round(md$ck1.CIu,2), \", respectively. So, for the \", md$lab$lab1, \", it can be concluded that \", kcon(md$ck1.CIl,md$ck1.CIu),\n        \" For the \", md$lab$lab2, \", the confidence interval of k2 shows that \", kcon(md$ck2.CIl,md$ck2.CIu), \n        sep=\"\")  \n  }\n}\nmd <<- md\n}\n\n\n\n\n\n\n###### Tables #######\nprintTables <- function(md){\n  \n  # Descriptives of the raw data\n    tab1 <- matrix(c(md$varnames$x,  md$lab$lab1,rround(md$x1mean,3),rround(md$x1sd,3),rround(md$x1min,3),rround(md$x1max,3),as.numeric(md$x1n),\n                     \" \",       md$lab$lab2,rround(md$x2mean,3),rround(md$x2sd,3),rround(md$x2min,3),rround(md$x2max,3),as.numeric(md$x2n),\n                     md$varnames$y,  md$lab$lab1,rround(md$y1mean,3),rround(md$y1sd,3),rround(md$y1min,3),rround(md$y1max,3),as.numeric(md$y1n),\n                     \" \",  md$lab$lab2,rround(md$y2mean,3),rround(md$y2sd,3),rround(md$y2min,3),rround(md$y2max,3),as.numeric(md$y2n))\n                   ,nrow=4,ncol=7,byrow=TRUE)\n    tab1 <- as.data.frame(tab1)\n    colnames(tab1) <- c(\"Variable\",\"Role\",\"Mean\",\"SD\",\"Minimum\",\"Maximum\",\" n\")\n    \n    cat(\"\\n \\n\",\n        \"Table 1: Descriptive Statistics of the Raw Data \\n\",\n        \"----------------------------------------------- \\n\")\n    print(tab1)\n\n\n  # Descriptive Statistics of the FIML Estimates\n    tab2 <- matrix(c(md$varnames$x,  md$lab$lab1,rround(md$xmean1,3),rround(sqrt(md$xvar1),3),\n                       \"     \",   md$lab$lab2,rround(md$xmean2,3),rround(sqrt(md$xvar2),3),\n                       md$varnames$y,  md$lab$lab1,rround(md$ymean1,3),rround(sqrt(md$yvar1),3),\n                       \"      \",  md$lab$lab2,rround(md$ymean2,3),rround(sqrt(md$yvar2),3))\n                   ,ncol=4,byrow=TRUE)\n    \n    tab2 <- as.data.frame(tab2)\n    colnames(tab2) <- c(\"Variable\",\"Role\", \"Mean\" ,\"SD\")\n    cat(\"\\n \\n\",\n        \"Table 2: Descriptive Statistics of the FIML Estimates \\n,\n        ----------------------------------------------------- \\n\")\n    print(tab2)\n\n\n  # Table of effect estimates\n    ttu=paste0(md$CIv,\"% CI\")\n#     tab3 <- matrix(c(\n#       \"Intercept\", md$lab$lab1,rround(md$intr1,3),rround(md$intr1.CIl,3),\"to  \",rround(md$intr1.CIu,3),pval2(md$intr1p),\"\",\"\",\"\",\n#       \"Actor\",\"\",rround(md$act1,3),rround(md$act1.CIl,3),\"to  \",rround(md$act1.CIu,3),pval2(md$act1p),rround(md$act1so,3), rround(md$act1ss,3),rround(md$act1r,3),\n#       \"Partner\",\"\",rround(md$part1,3),rround(md$part1.CIl,3),\"to  \",rround(md$part1.CIu,3),pval2(md$part1p),rround(md$part1so,3),rround(md$part1ss,3),rround(md$part1r,3),\n#       \"k\",\"\",rround(md$k1,3),rround(md$kl1,3),\"to  \",rround(md$ku1,3),\"\",\"\",\"\",\"\",\n#       \"Intercept\", md$lab$lab2,rround(md$intr2,3),rround(md$intr2.CIl,3),\"to  \",rround(md$intr2.CIu,3),pval2(md$intr2p),\"\",\"\",\"\",\n#       \"Actor\",\"\",rround(md$act2,3),rround(md$act2.CIl,3),\"to  \",rround(md$act2.CIu,3),pval2(md$act2p),rround(md$act2so,3),rround(md$act2ss,3),rround(md$act2r,3),\n#       \"Partner\",\"\",rround(md$part2,3),rround(md$part2.CIl,3),\"to  \",rround(md$part2.CIu,3),pval2(md$part2p),rround(md$part2so,3),rround(md$part2ss,3),rround(md$part2r,3),\n#       \"k\",\"\",rround(md$k2,3),rround(md$kl2,3),\"to  \",rround(md$ku2,3),\"\",\"\",\"\",\"\")\n#       ,ncol=10,byrow=TRUE)\n#     \n#     tab3 <- as.data.frame(tab3)\n#     colnames(tab3) <- c(\"Effect\", \"Role\",\"Estimate\" ,\"Lower\",ttu,\"Upper\",\"p value\",\"Beta (o)\",\"Beta (o)\",\"r\")\n#     cat(\"\\n \\n,\n#         Table 3: APIM Results for Each Member \\n\",\n#         \"------------------------------------- \\n\")\n#     tab3\n\n\n# Overall APIM Results\n  # Not sure about an overall k\n  tab4 <- matrix(c(\n    \"Intercept\",rround(md$intro,3),rround(md$intro.CIl,3),\"to  \",rround(md$intro.CIu,3),pval2(md$introp),\n    \"Actor\",rround(md$acto,3),rround(md$acto.CIl,3),\"to  \",rround(md$acto.CIu,3),pval2(md$actop),\n    \"Partner\",rround(md$parto,3),rround(md$parto.CIl,3),\"to  \",rround(md$parto.CIu,3),pval2(md$partop))\n    ,ncol=6,byrow=TRUE)\n  tab4 <- as.data.frame(tab4)\n  colnames(tab4) <- c(\"Effect\", \"Estimate\" ,\"Lower\",ttu,\"Upper\",\"p value\")             \n  cat(\"\\n \\n\",\n      \"Table 4: Overall APIM Results \\n\",  \n      \"----------------------------- \\n\")\n  print(tab4)\n\n  \n\n#   tables <- list(\"--------------- Table 1: Descriptive Statistics of the Raw Data ---------------\" = tab1, \n#               \"--------------- Table 2: Descriptive Statistics of the FIML Estimates ---------------\" = tab2, \n#               \"--------------- Table 3: APIM Results for Each Member ---------------\" = tab3,\n#               \"--------------- Table 4: Overall APIM Results ---------------\" = tab4)\n\n  return()\n}\n\n\n\n\n\n\n###### Citation ######\ncite <- function(){\ncat(\"\\n \\n ****CAUTION****  If you decide to use information contained here in a paper, please make sure that you acknowledge that you have used this program.\",\n    \"Also should you decide to use the exact text included here, you will need to put quotes around that material to avoid plagiarism. Although great effort has been undertaken to ensure the accuracy of results,\",\n    \"no complete guarantee can be made about their accuracy.  It is your responsibility to check the results and text for accuracy.  If you do find an error, please report it to Lara Stas (Lara.Stas@UGent.be) or David A. Kenny (david.kenny@uconn.edu).\",\n    sep = \"\")\n}\n\n\n\n\n\n\n###### Figures ######\nfigures <- function(temploc){\n  ### Figure 1: Standard Model\n  figgu=paste0(temploc,'APIM.tif')\n  FigU=paste0(temploc,'APIM_SEM_Fig.tif')\n  ttu=\"\"\n  \n  if (md$act1p<md$alpha) ttu=\"*\"\n  aaa1=paste0(rround(md$act1,3),ttu,\" (\",rrround(md$act1so,3),\")\")\n  ttu=\"\"\n  if (md$act2p<md$alpha) ttu=\"*\"\n  aaa2=paste0(rround(md$act2,3),ttu,\" (\",rrround(md$act2so,3),\")\")\n  ttu=\"\"\n  \n  if (md$part1p<md$alpha) ttu=\"*\"\n  ppp1=paste0(rround(md$part1,3),ttu,\" (\",rrround(md$part1so,3),\")\")\n  ttu=\"\"\n  if (md$part2p<md$alpha) ttu=\"*\"\n  ppp2=paste0(rround(md$part2,3),ttu,\" (\",rrround(md$part2so,3),\")\")\n  ttu=\"\"\n  \n  if (md$iccXp<md$alpha) ttu=\"*\"\n  rxx=paste0(rround(md$iccX,3),ttu,\" (\",rrround(md$iccXs,3),\")\")\n  ttu=\"\"\n  if (md$iccYp<md$alpha) ttu=\"*\"\n  ree=paste0(rround(md$iccY,3),ttu,\" (\",rrround(md$iccYs,3),\")\")\n  \n  img <- readTiff(figgu)\n  tiff(filename =FigU, width = 1400, height = 837,   pointsize = 14, bg = \"white\")\n  \n  plot(img)\n  \n  text(224,170,md$varnames$x,cex=1.8)\n  text(1015,170,md$varnames$y,cex=1.8)\n  text(205,676,md$varnames$x,cex=1.8)\n  text(1020,679,md$varnames$y,cex=1.8)\n  text(224,140,md$p2,cex=1.8)\n  text(1015,140,md$p2,cex=1.8)\n  text(205,646,md$p1,cex=1.8)\n  text(1020,650,md$p1,cex=1.8)\n  # Small change to make figure pretty\n  text(124,412,rxx,cex=1.8)\n  text(1263,412,ree,cex=1.8)\n  text(1005,300,ppp2,cex=1.8)\n  text(405,300,ppp1,cex=1.8)\n  text(645,180,aaa2,cex=1.8)\n  text(645,690,aaa1,cex=1.8)\n  text(1290,278,\"E2\",cex=1.8)\n  text(1290,560,\"E1\",cex=1.8)\n  text(1290,278,\"E2\",cex=1.8)\n  text(1290,560,\"E1\",cex=1.8)\n  title(main = \"Actor-Partner Interdependence Model (standardized estimates)\",cex.main=3.2,line = -3)\n  dev.off()\n\n\n\n  ### Figure 2: figure with correlations corrected for unreliability.\n  if (md$relok > 0 & md$reloor==0)\n  {\n    figgy=paste0(temploc,'APIML.tif')\n    FigL=paste0(temploc,'APIM_SEMLV_Fig.tif')\n    ttu=\"\"\n    \n    if (md$act1p3<md$alpha) ttu=\"*\"\n    aaa1=paste0(rround(md$act13,3),ttu,\" (\",rrround(md$act1s3,3),\")\")\n    ttu=\"\"\n    if (md$act2p3<md$alpha) ttu=\"*\"\n    aaa2=paste0(rround(md$act23,3),ttu,\" (\",rrround(md$act2s3,3),\")\")\n    ttu=\"\"\n    \n    if (md$partp13<md$alpha) ttu=\"*\"\n    ppp1=paste0(rround(md$part13,3),ttu,\" (\",rrround(md$parts13,3),\")\")\n    ttu=\"\"\n    if (md$partp23<md$alpha) ttu=\"*\"\n    ppp2=paste0(rround(md$part23,3),ttu,\" (\",rrround(md$parts23,3),\")\")\n    ttu=\"\"\n    \n    if (md$iccXp3<md$alpha) ttu=\"*\"\n    rxx=paste0(rround(md$iccX3,3),ttu,\" (\",rrround(md$iccXs3,3),\")\")\n    ttu=\"\"\n    if (md$iccYp3<md$alpha) ttu=\"*\"\n    ree=paste0(rround(md$iccY3,3),ttu,\" (\",rrround(md$iccYs3,3),\")\")\n    \n    \n    if (md$esd13 <= 0 | md$esd13 <= 0) ree=paste0(rround(md$iccY3,3),ttu,\" (undef.)\")\n    \n    img <- readTiff(figgy)\n    tiff(filename =FigL, width = 1400, height = 837,   pointsize = 14, bg = \"white\")\n    \n    plot(img)\n    text(224,155,md$varnames$x,cex=1.8)\n    text(1015,165,md$varnames$y,cex=1.8)\n    text(217,701,md$varnames$x,cex=1.8)\n    text(1020,694,md$varnames$y,cex=1.8)\n    text(224,125,md$p2,cex=1.8)\n    text(1015,135,md$p2,cex=1.8)\n    text(217,671,md$p1,cex=1.8)\n    text(1020,664,md$p1,cex=1.8)\n    # DAK small change to make figure pretty\n    text(124,412,rxx,cex=1.8)\n    text(1273,412,ree,cex=1.8)\n    text(985,300,ppp2,cex=1.8)\n    text(528,300,ppp1,cex=1.8)\n    text(645,165,aaa2,cex=1.8)\n    text(645,700,aaa1,cex=1.8)\n    text(1290,278,\"E2\",cex=1.8)\n    text(1290,560,\"E1\",cex=1.8)\n    text(1290,278,\"E2\",cex=1.8)\n    text(1290,560,\"E1\",cex=1.8)\n    title(main = \"Actor-Partner Interdependence Model (standardized estimates)\",cex.main=3.2,line = -3)\n    dev.off()\n  }\n}\n\n\n\n##### CHECK DEZE #####\n# CHECK OF DEZE GEBRUIKT #\n# DAK this function is for text output; may not be needed\neffectis  = function (eff,effp,effs,alp){\n  resu=paste0(\" is equal to \",rround(eff,3),\" and is\",knt(effp,alp),\" statistically significant (\",pval(effp),\") with a standardized effect of \",rrround(effs,3))\n}\n# CHECK OF KCON NIET BETER IN DE TEKST FUNCTIE ZIT\n\n\n\n#' APIM.SEM\n#'\n#' @name APIM.SEM\n#' @docType package\nNULL\n\n",
    "created" : 1422281862969.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "476788425",
    "id" : "9878CE41",
    "lastKnownWriteTime" : 1421251910,
    "path" : "C:/Users/admin/Dropbox/APIM/APIM.SEM/APIM.SEM/R/Start functions.R",
    "project_path" : "R/Start functions.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}